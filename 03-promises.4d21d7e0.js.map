{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAZbL,EAAKa,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOjB,EAAKK,MAAMa,OAC9B,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAAKoB,OAAOF,MAAOC,GAAK,EAC3ChB,EAAcgB,EAAGH,GAChBK,MAAK,EAACjB,SAACA,EAAQC,MAAEA,MAChBiB,QAAQC,IAAI,uBAAqBnB,QAAiBC,MAAU,IAE7DmB,OAAM,EAACpB,SAACA,EAAQC,MAAEA,MACjBiB,QAAQC,IAAI,sBAAoBnB,QAAeC,MAAU,IAE3DW,GAAgBC,OAAOjB,EAAKyB,KAAKP,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  })\n};\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(form.delay.value);\n  for (let i = 1; i <= form.amount.value; i += 1) {\n    createPromise(i, delay)\n    .then(({position, delay}) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay = delay + Number(form.step.value);\n  }\n};\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","i","amount","then","console","log","catch","step"],"version":3,"file":"03-promises.4d21d7e0.js.map"}